1. Дайте пояснению понятию «событие программного объекта».
Процесс перехода объекта из одного состояния в другое. 
При этом, об этом переходе могут быть извещены другие объекты. 
У события есть издатель (или генератор) события и могут быть подписчики (или обработчики) события.

2. Объясните механизм генерации и обработки событий в C#.
* объявляем делегат
* объявляем событие event назв_делегата назв_события
* описываем методы, инициирующих событие
Использование событий:
- Подписка на событие
- Описание метода-обработчика события (такая же сигнатура, как и у делегата)

3. Поясните как самостоятельно реализовать механизм генерации и обработки событий на JS или С++.
JS: CustonEvent(type [, options])
options:
bubbles: true/false – если true, тогда событие всплывает.
cancelable: true/false – если true, тогда можно отменить действие по умолчанию.
После того, как объект события создан, мы должны запустить его на элементе, вызвав метод elem.dispatchEvent(event).

4. Какой встроенный механизм используется в Node.js для генерации и обработки событий. Поясните принцип его работы.   
EventEmitter - JS-класс, предоставляющий функциональность для асинхронной обработки событий в Node.js. 
необходимо включения двух модулей: events и util.
Применяется в качестве базового для пользовательского объекта. 
Производный от EventEmitter объект может быть создан с помощью функции inherits модуля utils.
Для генерации событий предназначена функция emit(), а для прослушивания функция on().
var util = require('util');
var ee = require('events');
util.inherits(DB, ee.EventEmitter);
var db = new DB();
db.emit(...);
db.on(...);
Таймер – механизм, позволяющий генерировать событие или выполнить некоторое действие, через заданный промежуток времени.
